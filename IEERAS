import pandas as pd
import numpy as np
df=pd.read_csv('train.csv')
def cleaner(row):
    if row in(np.nan,'nan',0.0):
        return row
    else:
        x,y=6,-6
        try:
            return float(row[x:y])
        except:
            print(f'{row,type(row)}),exception')
def pre_process(df,mode):
    df=df.drop(['UID','ph_no','cvv','credit_card_number','job','email','url','country','emoji','name'],axis=1)
    n=len(df.columns) 
    for i in df.columns[:n]:
        df[i]=df[i].apply(cleaner)
        df[i]=df[i].fillna(df[i].median())
    return df
df=pre_process(df,'train')
categorical_columns=df.select_dtypes(include=['object']).columns
from sklearn.preprocessing import LabelEncoder as LE
x=df.drop('state',axis=1)
y=df['state']
le=LE()
y=le.fit_transform(y)
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)
from sklearn.linear_model import LogisticRegression as LR
lr=LR()
lr.fit(x_train,y_train)
lr.score(x_test,y_test)
df_test=pd.read_csv('test.csv')
df_test_cleaned=pre_process(df_test,'test')
y_pred=lr.predict(df_test_cleaned)
y_pred=le.inverse_transform(y_pred)
submission=pd.DataFrame({'UID': df_test['UID'],'state':y_pred})
submission.to_csv('submission.csv',index=False)
